{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport BuyMe from \"../components/BuyMe\";\nimport { withTranslation } from \"../utils/i18n\";\nimport Loading from \"../components/Loading\";\nimport Swal from \"sweetalert2\";\nimport { lockedMessage } from \"../utils/misc\";\nimport AddAppButton from \"../components/AddAppButton\";\n\nvar Home = function Home(_ref) {\n  var t = _ref.t,\n      i18n = _ref.i18n,\n      loading = _ref.loading;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      newGameLoading = _useState[0],\n      setNewGameLoading = _useState[1];\n\n  var onNewGame = function onNewGame(e) {\n    var res, _await$res$json, gameCode, _await$res$json2, minutes;\n\n    return _regeneratorRuntime.async(function onNewGame$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            setNewGameLoading(true);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(window.location.origin + \"/new\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                name: name\n              })\n            }));\n\n          case 5:\n            res = _context.sent;\n\n            if (!(res.status === 200)) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 9:\n            _await$res$json = _context.sent;\n            gameCode = _await$res$json.gameCode;\n            router.push(\"/\" + gameCode);\n            _context.next = 24;\n            break;\n\n          case 14:\n            if (!(res.status === 423)) {\n              _context.next = 23;\n              break;\n            }\n\n            _context.next = 17;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 17:\n            _await$res$json2 = _context.sent;\n            minutes = _await$res$json2.minutes;\n            setNewGameLoading(false);\n            Swal.fire(lockedMessage(minutes));\n            _context.next = 24;\n            break;\n\n          case 23:\n            throw res.status + \" \" + res.statusText;\n\n          case 24:\n            _context.next = 31;\n            break;\n\n          case 26:\n            _context.prev = 26;\n            _context.t0 = _context[\"catch\"](2);\n            console.error(_context.t0);\n            Swal.fire(_context.t0);\n            setNewGameLoading(false);\n\n          case 31:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 26]], Promise);\n  };\n\n  var showSpyfallBack = i18n.language === \"tr\";\n  return __jsx(\"div\", {\n    className: \"main-menu\"\n  }, __jsx(\"div\", {\n    style: {\n      position: \"relative\",\n      margin: \"1em auto 0\",\n      width: \"fit-content\"\n    }\n  }, __jsx(\"h3\", null, t(\"ui.welcome to spyfall\")), __jsx(\"img\", {\n    className: \"spyfall-back\",\n    src: \"/m3works.png\",\n    alt: \"back\"\n  })), __jsx(\"hr\", null), (loading || newGameLoading) && __jsx(Loading, null), !loading && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"button-container\"\n  }, __jsx(Link, {\n    href: \"/join\"\n  }, __jsx(\"button\", {\n    id: \"btn-join-game\",\n    className: \"btn-large\"\n  }, t(\"ui.join game\"))), __jsx(\"button\", {\n    id: \"btn-new-game\",\n    onClick: onNewGame,\n    className: \"btn-large\"\n  }, t(\"ui.new game\"))), __jsx(\"div\", {\n    className: \"button-container-vertical\"\n  }, __jsx(AddAppButton, null))));\n};\n\nexport default withTranslation(\"common\")(Home);","map":null,"metadata":{},"sourceType":"module"}