{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\n\nvar Settings = function Settings(_ref) {\n  var gameState = _ref.gameState,\n      socket = _ref.socket;\n  var settings = gameState.settings,\n      AVAILABLE_LOCATION_PACKS = gameState.AVAILABLE_LOCATION_PACKS;\n  var serverMinutes = settings.timeLimit,\n      serverPackId = settings.locationPack,\n      serverIncludeAllSpy = settings.includeAllSpy;\n  return __jsx(\"div\", null, __jsx(TimeLimit, {\n    onSetMinutes: function onSetMinutes(minutes) {\n      return socket.emit(\"setTimeLimit\", minutes);\n    },\n    serverMinutes: serverMinutes\n  }), __jsx(\"br\", null), __jsx(LocationPack, {\n    onSetLocationPack: function onSetLocationPack(packId) {\n      return socket.emit(\"setLocationPack\", packId);\n    },\n    serverPackId: serverPackId,\n    locationPackList: AVAILABLE_LOCATION_PACKS\n  }), __jsx(IncludeAllSpy, {\n    onSetIncludeAllSpy: function onSetIncludeAllSpy(includeAllSpy) {\n      return socket.emit(\"setIncludeAllSpy\", includeAllSpy);\n    },\n    serverIncludeAllSpy: serverIncludeAllSpy\n  }));\n};\n\nvar TimeLimit = function TimeLimit(_ref2) {\n  var onSetMinutes = _ref2.onSetMinutes,\n      serverMinutes = _ref2.serverMinutes;\n  var minLength = 0;\n  var maxLength = 60;\n\n  var _useState = useState(serverMinutes),\n      minutes = _useState[0],\n      setMinutes = _useState[1];\n\n  var handleChange = function handleChange(change) {\n    return function () {\n      var newMinutes = minutes + change;\n\n      if (newMinutes >= minLength && newMinutes <= maxLength) {\n        setMinutes(newMinutes);\n        onSetMinutes(newMinutes);\n      }\n    };\n  };\n\n  useEffect(function () {\n    setMinutes(serverMinutes);\n  }, [serverMinutes]);\n  return __jsx(\"div\", null, __jsx(\"label\", null, \"Time Limit:\"), __jsx(\"div\", {\n    style: {\n      margin: \"-.5em 0 -1em\"\n    },\n    className: \"jsx-4245920973\"\n  }, __jsx(\"button\", {\n    onClick: handleChange(-1),\n    disabled: minutes <= minLength,\n    className: \"jsx-4245920973\" + \" \" + \"btn-small\"\n  }, \"-\"), __jsx(\"span\", {\n    className: \"jsx-4245920973\"\n  }, minutes, \" minute\", minutes !== 1 ? \"s\" : \"\"), __jsx(\"button\", {\n    onClick: handleChange(1),\n    disabled: minutes >= maxLength,\n    className: \"jsx-4245920973\" + \" \" + \"btn-small\"\n  }, \"+\"), __jsx(_JSXStyle, {\n    id: \"4245920973\"\n  }, [\"button.jsx-4245920973{margin:1em,0;font-size:1.5em;}\"])));\n};\n\nvar LocationPack = function LocationPack(_ref3) {\n  var onSetLocationPack = _ref3.onSetLocationPack,\n      locationPackList = _ref3.locationPackList,\n      serverPackId = _ref3.serverPackId;\n\n  var _useState2 = useState(serverPackId),\n      selectedPackId = _useState2[0],\n      setSelectedPackId = _useState2[1];\n\n  var handleChange = function handleChange(newPackId) {\n    setSelectedPackId(newPackId);\n    onSetLocationPack(newPackId);\n  };\n\n  useEffect(function () {\n    setSelectedPackId(serverPackId);\n  }, [serverPackId]);\n  return __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"location-pack\"\n  }, \"Location Pack:\"), __jsx(\"select\", {\n    className: \"u-full-width\",\n    id: \"location-pack\",\n    value: selectedPackId,\n    onChange: function onChange(_ref4) {\n      var value = _ref4.target.value;\n      return handleChange(value);\n    },\n    style: {\n      maxWidth: \"10em\"\n    }\n  }, locationPackList.map(function (_ref5) {\n    var id = _ref5.id,\n        name = _ref5.name;\n    return __jsx(\"option\", {\n      key: id,\n      value: id\n    }, name);\n  })));\n};\n\nvar IncludeAllSpy = function IncludeAllSpy(_ref6) {\n  var onSetIncludeAllSpy = _ref6.onSetIncludeAllSpy,\n      serverIncludeAllSpy = _ref6.serverIncludeAllSpy;\n\n  var _useState3 = useState(serverIncludeAllSpy),\n      includeAllSpy = _useState3[0],\n      setIncludeAllSpy = _useState3[1];\n\n  var handleChange = function handleChange(checked) {\n    setIncludeAllSpy(checked);\n    onSetIncludeAllSpy(checked);\n  };\n\n  useEffect(function () {\n    setIncludeAllSpy(serverIncludeAllSpy);\n  }, [serverIncludeAllSpy]);\n  return __jsx(\"label\", null, __jsx(\"input\", {\n    type: \"checkbox\",\n    onChange: function onChange(_ref7) {\n      var checked = _ref7.target.checked;\n      return handleChange(checked);\n    },\n    checked: includeAllSpy\n  }), __jsx(\"span\", {\n    className: \"label-body\"\n  }, \"Enable ~2% chance all players are spies\"));\n};\n\nexport default Settings;","map":null,"metadata":{},"sourceType":"module"}