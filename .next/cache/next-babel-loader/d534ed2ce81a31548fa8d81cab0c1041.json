{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\n\nvar Admin = function Admin() {\n  var _useState = useState(),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var onSubmit = function onSubmit(e) {\n    var res;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            console.log(\"on sumbit\");\n            setLoading(true);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(window.location.origin + \"/lock\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                password: event.target.password.value\n              })\n            }));\n\n          case 5:\n            res = _context.sent;\n            setLoading(false);\n            setStatus(res.status + \" \" + res.statusText);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(React.Fragment, null, !status && !loading && __jsx(\"form\", {\n    onSubmit: onSubmit\n  }, __jsx(\"label\", null, \"Password:\", __jsx(\"input\", {\n    type: \"text\",\n    name: \"password\"\n  })), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Lock New Games and Rounds\"\n  })), loading && __jsx(\"div\", null, \"Sending...\"), status && __jsx(\"div\", null, \"Response: \", status));\n};\n\nexport default Admin;","map":null,"metadata":{},"sourceType":"module"}